{"version":3,"sources":["components/Medal.jsx","components/Country.jsx","components/NewCountry.jsx","App.js","reportWebVitals.js","index.js"],"names":["Medal","state","this","props","medal","country","onIncrement","onSubtract","className","name","onClick","id","disabled","Component","Country","medals","sum","forEach","onDelete","getTotals","map","key","NewCountry","togglePrompt","prompt","trim","length","onAdd","App","countries","gold","silver","bronze","handleIncrement","countryId","medalName","idx","findIndex","c","setState","handleSubtract","handleDelete","mutableCountries","filter","handleAdd","Math","max","concat","reduce","a","b","Fragment","getTotalMedals","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17b43071.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Medal extends Component {\n    state = {}\n    render() {\n        const {medal, country, onIncrement, onSubtract} = this.props;\n        return (\n            <div className=\"medals\">\n                {medal.name} Medals: {country[medal.name]}\n                <button onClick={()=>onIncrement(country.id, medal.name)}>+</button>\n                <button disabled={country[medal.name]===0} onClick={()=> onSubtract(country.id, medal.name)}>-</button>\n            </div>\n        );\n    }\n}\n\nexport default Medal;","import React, {Component} from 'react';\nimport Medal from './Medal';\n\n\nclass Country extends Component {\n    // state = {\n    //     name: this.props.country.name,\n    //     gold: this.props.country.gold,\n    // }\n\n    // addMedal = () => this.setState({gold: this.state.gold + 1});\n    // subtractMedal = () => this.setState({gold: this.state.gold - 1});\n\n    getTotals(country, medals){\n        let sum = 0;\n        medals.forEach(medal => {sum += country[medal.name];});\n        return sum;\n    }\n\n\n\n    render() {\n        const {country, medals, onIncrement, onSubtract, onDelete} = this.props;\n        return (\n            <div className='country'>\n                <div className='name'>\n                {country.name}\n                <span className='badge'>\n                    {this.getTotals(country, medals)}\n                </span>\n                </div>\n                { medals.map(medal => \n                <Medal\n                    key={medal.id}\n                    country={country}\n                    medal={medal}\n                    onIncrement={onIncrement}\n                    onSubtract={onSubtract}\n                />\n                )}\n                <button onClick={() => onDelete(country.id)}>Delete</button>\n\n                <hr/>\n            </div>\n        );\n    }\n}\n\nexport default Country;\n","import React, { Component } from 'react';\r\n\r\nexport class NewCountry extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    togglePrompt = () =>{\r\n      //triggers prompt box\r\n      const name = prompt('Enter country name');\r\n      if (name && name.trim().length > 0){\r\n          this.props.onAdd(name);\r\n      }\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n    <div className='newCountryButton'>\r\n      <button onClick={this.togglePrompt}>Add Country</button>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewCountry;\r\n","import React, {Component} from 'react';\nimport Country from './components/Country';\nimport './App.css';\nimport NewCountry from './components/NewCountry';\n\nclass App extends Component {\n  state = {\n    countries: [\n      {id: 1, name: 'United States', gold: 3, silver: 2, bronze: 8},\n      {id: 2, name: 'China', gold: 6, silver: 2, bronze: 8},\n      {id: 3, name: 'Germany', gold: 2, silver: 2, bronze: 8},\n    ],\n    medals: [\n      {id: 1, name: 'gold'},\n      {id: 2, name: 'silver'},\n      {id: 3, name: 'bronze'},\n    ]\n  }\n  handleIncrement = (countryId, medalName) => {\n    const countries = [...this.state.countries];\n    const idx = countries.findIndex((c) =>c.id === countryId)\n    countries[idx][medalName]+=1;\n    this.setState({countries: countries});\n  }\n  handleSubtract = (countryId, medalName) => {\n    const countries = [...this.state.countries];\n    const idx = countries.findIndex((c) =>c.id === countryId)\n    countries[idx][medalName]-=1;\n    this.setState({countries: countries});\n  }\n\n  getTotalMedals(){\n    let sum=0;\n    this.state.medals.forEach(medal => { sum += this.state.countries.reduce((a, b) => a + b[medal.name], 0);})\n    return sum\n  }\n\n  handleDelete = (countryId) => {\n    const {countries} = this.state;\n    const mutableCountries = [...countries].filter(c => c.id !== countryId);\n    this.setState({countries: mutableCountries})\n  }\n\n  handleAdd = (name) => {\n    const {countries} = this.state;\n    const id = countries.length === 0 ? 1 : Math.max(...countries.map(countries=>countries.id)) + 1;\n    const mutableCountries = [...countries].concat({id: id, name: name, gold: 0, silver: 0, bronze: 0 });\n    this.setState({countries: mutableCountries})\n  }\n\n  render() { \n    return (\n        <React.Fragment>\n          {/* {this.state.countries.map(country =>\n            <Country key={country.id} country={country}/>\n          )} */}\n          <div className='header'>\n            Olympic Medals \n            <span className='badge'> <br></br>  \n              {this.getTotalMedals() }\n            </span>\n            </div>\n            <div className='countries'>\n              { this.state.countries.map(country => \n              <Country\n                key={country.id}\n                country={country}\n                medals={this.state.medals}\n                onIncrement={this.handleIncrement}\n                onSubtract={this.handleSubtract}\n                onDelete={this.handleDelete}\n                />\n                \n              )}\n              <NewCountry \n                onAdd={this.handleAdd}\n              />\n            </div>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}